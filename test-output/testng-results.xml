<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="8" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-13T11:24:30 EET" name="RegressionTest" finished-at="2025-01-13T11:24:54 EET" duration-ms="23758">
    <groups>
      <group name="ErrorValidation">
        <method signature="ErrorValidationTest.testInvalidLoginLandingPage()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" name="testInvalidLoginLandingPage" class="tests.ErrorValidationTest"/>
      </group> <!-- ErrorValidation -->
    </groups>
    <test started-at="2025-01-13T11:24:30 EET" name="LoginErrorValidation" finished-at="2025-01-13T11:24:48 EET" duration-ms="17674">
      <class name="tests.ErrorValidationTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" started-at="2025-01-13T11:24:30 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-01-13T11:24:37 EET" duration-ms="6688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" started-at="2025-01-13T11:24:37 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2025-01-13T11:24:39 EET" duration-ms="2665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="testInvalidLoginLandingPage()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" started-at="2025-01-13T11:24:39 EET" name="testInvalidLoginLandingPage" description="Validates error message for invalid login attempts on the landing page." finished-at="2025-01-13T11:24:44 EET" duration-ms="4351" status="SKIP">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at tests.ErrorValidationTest.testInvalidLoginLandingPage(ErrorValidationTest.java:62)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginLandingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" started-at="2025-01-13T11:24:44 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2025-01-13T11:24:44 EET" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidLoginLandingPage()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" started-at="2025-01-13T11:24:44 EET" name="testInvalidLoginLandingPage" description="Validates error message for invalid login attempts on the landing page." finished-at="2025-01-13T11:24:46 EET" duration-ms="1552" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at tests.ErrorValidationTest.testInvalidLoginLandingPage(ErrorValidationTest.java:62)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginLandingPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ErrorValidationTest@5d10455d]" started-at="2025-01-13T11:24:46 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-01-13T11:24:48 EET" duration-ms="1871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ErrorValidationTest -->
    </test> <!-- LoginErrorValidation -->
    <test started-at="2025-01-13T11:24:30 EET" name="PriceLowtoHighTest" finished-at="2025-01-13T11:24:53 EET" duration-ms="22769">
      <class name="tests.PriceLowtoHighTest">
        <test-method is-config="true" signature="setupEnvironment()[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:30 EET" name="setupEnvironment" description="Sets up the environment for Allure reporting." finished-at="2025-01-13T11:24:30 EET" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupEnvironment -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:30 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-01-13T11:24:37 EET" duration-ms="6911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:37 EET" name="setup" finished-at="2025-01-13T11:24:37 EET" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:37 EET" name="verifyPriceLowToHighSorting" data-provider="getLandingPageData" finished-at="2025-01-13T11:24:47 EET" duration-ms="9943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@3d0495fe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceLowToHighSorting -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:47 EET" name="setup" finished-at="2025-01-13T11:24:47 EET" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:47 EET" name="verifyPriceLowToHighSorting" data-provider="getLandingPageData" finished-at="2025-01-13T11:24:50 EET" duration-ms="2559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@46889f50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceLowToHighSorting -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:50 EET" name="setup" finished-at="2025-01-13T11:24:50 EET" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:50 EET" name="verifyPriceLowToHighSorting" data-provider="getLandingPageData" finished-at="2025-01-13T11:24:51 EET" duration-ms="1357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@2bec0a7a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceLowToHighSorting -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.PriceLowtoHighTest@456abb66]" started-at="2025-01-13T11:24:51 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-01-13T11:24:53 EET" duration-ms="1617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.PriceLowtoHighTest -->
    </test> <!-- PriceLowtoHighTest -->
    <test started-at="2025-01-13T11:24:30 EET" name="SubmitOrderTest" finished-at="2025-01-13T11:24:54 EET" duration-ms="23758">
      <class name="tests.SubmitOrderTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:30 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-01-13T11:24:35 EET" duration-ms="4758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:35 EET" name="setup" finished-at="2025-01-13T11:24:39 EET" duration-ms="3938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="submitOrderTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:39 EET" name="submitOrderTest" description="End To End Testing, adding products to the cart, completing the checkout process, filling shipping information, and verifying order confirmation." data-provider="getSubmitOrderData" finished-at="2025-01-13T11:24:46 EET" duration-ms="7115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mahmoud]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Goma]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[925]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:46 EET" name="setup" finished-at="2025-01-13T11:24:46 EET" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="submitOrderTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:46 EET" name="submitOrderTest" description="End To End Testing, adding products to the cart, completing the checkout process, filling shipping information, and verifying order confirmation." data-provider="getSubmitOrderData" finished-at="2025-01-13T11:24:50 EET" duration-ms="3795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mueller]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Mattius]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[15234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:50 EET" name="setup" finished-at="2025-01-13T11:24:50 EET" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="submitOrderTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:50 EET" name="submitOrderTest" description="End To End Testing, adding products to the cart, completing the checkout process, filling shipping information, and verifying order confirmation." data-provider="getSubmitOrderData" finished-at="2025-01-13T11:24:52 EET" duration-ms="2096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Dohn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@4426bff1]" started-at="2025-01-13T11:24:52 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-01-13T11:24:54 EET" duration-ms="1371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SubmitOrderTest -->
    </test> <!-- SubmitOrderTest -->
  </suite> <!-- RegressionTest -->
</testng-results>
