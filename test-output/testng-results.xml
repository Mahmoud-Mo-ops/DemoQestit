<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="14" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-06T02:36:22 EET" name="RegressionTest" finished-at="2025-03-06T02:37:02 EET" duration-ms="40604">
    <groups>
    </groups>
    <test started-at="2025-03-06T02:36:22 EET" name="ErrorValidationTest" finished-at="2025-03-06T02:36:47 EET" duration-ms="24830">
      <class name="tests.ErrorValidationTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:22 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-03-06T02:36:32 EET" duration-ms="10136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:33 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2025-03-06T02:36:38 EET" duration-ms="5610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="testInvalidLoginLandingPage(data.LoginLandingPageData)[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:38 EET" name="testInvalidLoginLandingPage" data-provider="getErrorValidationData" finished-at="2025-03-06T02:36:40 EET" duration-ms="2091" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@6efea2e8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at tests.ErrorValidationTest.testInvalidLoginLandingPage(ErrorValidationTest.java:71)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginLandingPage -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:40 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:41 EET" duration-ms="434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginLandingPage status=SKIP method=ErrorValidationTest.testInvalidLoginLandingPage(data.LoginLandingPageData)[pri:0, instance:tests.ErrorValidationTest@1eca3ea7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:41 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2025-03-06T02:36:41 EET" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidLoginLandingPage(data.LoginLandingPageData)[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:41 EET" name="testInvalidLoginLandingPage" data-provider="getErrorValidationData" finished-at="2025-03-06T02:36:43 EET" duration-ms="1550" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@591a7cea]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at tests.ErrorValidationTest.testInvalidLoginLandingPage(ErrorValidationTest.java:71)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginLandingPage -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:43 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:43 EET" duration-ms="445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginLandingPage status=FAILURE method=ErrorValidationTest.testInvalidLoginLandingPage(data.LoginLandingPageData)[pri:0, instance:tests.ErrorValidationTest@1eca3ea7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ErrorValidationTest@1eca3ea7]" started-at="2025-03-06T02:36:43 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-03-06T02:36:47 EET" duration-ms="3333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ErrorValidationTest -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2025-03-06T02:36:22 EET" name="LogOutTest" finished-at="2025-03-06T02:36:53 EET" duration-ms="30805">
      <class name="tests.LogOutTest">
        <test-method is-config="true" signature="setupEnvironment()[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:22 EET" name="setupEnvironment" description="Sets up the environment for Allure reporting." finished-at="2025-03-06T02:36:22 EET" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupEnvironment -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:22 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-03-06T02:36:25 EET" duration-ms="3178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:28 EET" name="setUp" finished-at="2025-03-06T02:36:33 EET" duration-ms="5159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogOut(data.LoginLandingPageData)[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:33 EET" name="testLogOut" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:37 EET" duration-ms="3271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@75ce25ec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogOut -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:37 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:37 EET" duration-ms="630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogOut status=SUCCESS method=LogOutTest.testLogOut(data.LoginLandingPageData)[pri:0, instance:tests.LogOutTest@1ee5632d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:37 EET" name="setUp" finished-at="2025-03-06T02:36:38 EET" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogOut(data.LoginLandingPageData)[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:38 EET" name="testLogOut" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:43 EET" duration-ms="4769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@3f38c77a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogOut -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:43 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:43 EET" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogOut status=SUCCESS method=LogOutTest.testLogOut(data.LoginLandingPageData)[pri:0, instance:tests.LogOutTest@1ee5632d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:43 EET" name="setUp" finished-at="2025-03-06T02:36:43 EET" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogOut(data.LoginLandingPageData)[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:43 EET" name="testLogOut" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:51 EET" duration-ms="7468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@67d36d4b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogOut -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:51 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:51 EET" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogOut status=SUCCESS method=LogOutTest.testLogOut(data.LoginLandingPageData)[pri:0, instance:tests.LogOutTest@1ee5632d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogOutTest@1ee5632d]" started-at="2025-03-06T02:36:51 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-03-06T02:36:53 EET" duration-ms="1623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LogOutTest -->
    </test> <!-- LogOutTest -->
    <test started-at="2025-03-06T02:36:22 EET" name="RemoveFromCartTest" finished-at="2025-03-06T02:36:56 EET" duration-ms="34537">
      <class name="tests.RemoveFromCartTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:22 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-03-06T02:36:32 EET" duration-ms="9838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:32 EET" name="setup" finished-at="2025-03-06T02:36:35 EET" duration-ms="2719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRemoveFromCart(data.LoginLandingPageData)[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:35 EET" name="testRemoveFromCart" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:43 EET" duration-ms="8321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@160d7999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFromCart -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:43 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:44 EET" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRemoveFromCart status=SUCCESS method=RemoveFromCartTest.testRemoveFromCart(data.LoginLandingPageData)[pri:0, instance:tests.RemoveFromCartTest@7e49ded] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:44 EET" name="setup" finished-at="2025-03-06T02:36:44 EET" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRemoveFromCart(data.LoginLandingPageData)[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:44 EET" name="testRemoveFromCart" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:47 EET" duration-ms="3250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@55a85a63]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFromCart -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:47 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:48 EET" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRemoveFromCart status=SUCCESS method=RemoveFromCartTest.testRemoveFromCart(data.LoginLandingPageData)[pri:0, instance:tests.RemoveFromCartTest@7e49ded] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:48 EET" name="setup" finished-at="2025-03-06T02:36:48 EET" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRemoveFromCart(data.LoginLandingPageData)[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:48 EET" name="testRemoveFromCart" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:54 EET" duration-ms="6310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@402116a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFromCart -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:54 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:55 EET" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRemoveFromCart status=SUCCESS method=RemoveFromCartTest.testRemoveFromCart(data.LoginLandingPageData)[pri:0, instance:tests.RemoveFromCartTest@7e49ded] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RemoveFromCartTest@7e49ded]" started-at="2025-03-06T02:36:55 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-03-06T02:36:56 EET" duration-ms="1676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RemoveFromCartTest -->
    </test> <!-- RemoveFromCartTest -->
    <test started-at="2025-03-06T02:36:22 EET" name="SubmitOrderTest" finished-at="2025-03-06T02:37:00 EET" duration-ms="38081">
      <class name="tests.SubmitOrderTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:22 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-03-06T02:36:31 EET" duration-ms="8665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:31 EET" name="setup" finished-at="2025-03-06T02:36:37 EET" duration-ms="5887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="submitOrderTest(data.SubmitOrderData)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:37 EET" name="submitOrderTest" data-provider="getSubmitOrderData" finished-at="2025-03-06T02:36:47 EET" duration-ms="10190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.SubmitOrderData@23a9dc26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:47 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:48 EET" duration-ms="547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitOrderTest status=SUCCESS method=SubmitOrderTest.submitOrderTest(data.SubmitOrderData)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:48 EET" name="setup" finished-at="2025-03-06T02:36:48 EET" duration-ms="371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="submitOrderTest(data.SubmitOrderData)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:48 EET" name="submitOrderTest" data-provider="getSubmitOrderData" finished-at="2025-03-06T02:36:51 EET" duration-ms="2627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.SubmitOrderData@53a36410]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:51 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:51 EET" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitOrderTest status=SUCCESS method=SubmitOrderTest.submitOrderTest(data.SubmitOrderData)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:51 EET" name="setup" finished-at="2025-03-06T02:36:51 EET" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="submitOrderTest(data.SubmitOrderData)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:51 EET" name="submitOrderTest" data-provider="getSubmitOrderData" finished-at="2025-03-06T02:36:58 EET" duration-ms="7251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.SubmitOrderData@6d405e7c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:58 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:59 EET" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitOrderTest status=SUCCESS method=SubmitOrderTest.submitOrderTest(data.SubmitOrderData)[pri:0, instance:tests.SubmitOrderTest@35eb4a3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SubmitOrderTest@35eb4a3b]" started-at="2025-03-06T02:36:59 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-03-06T02:37:00 EET" duration-ms="1459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SubmitOrderTest -->
    </test> <!-- SubmitOrderTest -->
    <test started-at="2025-03-06T02:36:22 EET" name="PriceLowtoHighFilterationTest" finished-at="2025-03-06T02:37:02 EET" duration-ms="40604">
      <class name="tests.PriceLowtoHighTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:22 EET" name="initialize" description="Sets up the browser instance for each test." finished-at="2025-03-06T02:36:31 EET" duration-ms="9357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:32 EET" name="setup" finished-at="2025-03-06T02:36:38 EET" duration-ms="5747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:38 EET" name="verifyPriceLowToHighSorting" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:45 EET" duration-ms="6947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@40717d9a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceLowToHighSorting -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:45 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:46 EET" duration-ms="606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPriceLowToHighSorting status=SUCCESS method=PriceLowtoHighTest.verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:46 EET" name="setup" finished-at="2025-03-06T02:36:46 EET" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:46 EET" name="verifyPriceLowToHighSorting" data-provider="getLandingPageData" finished-at="2025-03-06T02:36:49 EET" duration-ms="2691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@127df371]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceLowToHighSorting -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:49 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:36:49 EET" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPriceLowToHighSorting status=SUCCESS method=PriceLowtoHighTest.verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:49 EET" name="setup" finished-at="2025-03-06T02:36:49 EET" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:36:49 EET" name="verifyPriceLowToHighSorting" data-provider="getLandingPageData" finished-at="2025-03-06T02:37:01 EET" duration-ms="11684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@36cabac6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriceLowToHighSorting -->
        <test-method is-config="true" signature="captureScreenshotAfterTest(org.testng.ITestResult)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:37:01 EET" name="captureScreenshotAfterTest" description="Takes a screenshot after each test method." finished-at="2025-03-06T02:37:01 EET" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPriceLowToHighSorting status=SUCCESS method=PriceLowtoHighTest.verifyPriceLowToHighSorting(data.LoginLandingPageData)[pri:0, instance:tests.PriceLowtoHighTest@51ba952e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshotAfterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.PriceLowtoHighTest@51ba952e]" started-at="2025-03-06T02:37:01 EET" name="tearDown" description="Cleans up resources and quits the browser after each test." finished-at="2025-03-06T02:37:02 EET" duration-ms="1433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.PriceLowtoHighTest -->
    </test> <!-- PriceLowtoHighFilterationTest -->
  </suite> <!-- RegressionTest -->
</testng-results>
