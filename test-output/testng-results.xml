<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="10" total="18" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-18T11:33:52 EET" name="Suite" finished-at="2024-12-18T11:34:01 EET" duration-ms="9177">
    <groups>
      <group name="ErrorValidation">
        <method signature="ErrorValidationTest.testInvalidLoginLandingPage()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" name="testInvalidLoginLandingPage" class="tests.ErrorValidationTest"/>
      </group> <!-- ErrorValidation -->
    </groups>
    <test started-at="2024-12-18T11:33:52 EET" name="ErrorValidationTest" finished-at="2024-12-18T11:33:59 EET" duration-ms="7244">
      <class name="tests.ErrorValidationTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" started-at="2024-12-18T11:33:52 EET" name="initialize" description="Sets up the browser instance and prepares the driver for the test execution." finished-at="2024-12-18T11:33:56 EET" duration-ms="3705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" started-at="2024-12-18T11:33:56 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2024-12-18T11:33:57 EET" duration-ms="1214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="testInvalidLoginLandingPage()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" started-at="2024-12-18T11:33:57 EET" name="testInvalidLoginLandingPage" description="Validates error message for invalid login attempts on the landing page." finished-at="2024-12-18T11:33:58 EET" duration-ms="801" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [correct error message is Epic sadface: Password is required] but found [Epic sadface: Password is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [correct error message is Epic sadface: Password is required] but found [Epic sadface: Password is required]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at tests.ErrorValidationTest.testInvalidLoginLandingPage(ErrorValidationTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginLandingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" started-at="2024-12-18T11:33:58 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2024-12-18T11:33:58 EET" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidLoginLandingPage()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" started-at="2024-12-18T11:33:58 EET" name="testInvalidLoginLandingPage" description="Validates error message for invalid login attempts on the landing page." finished-at="2024-12-18T11:33:59 EET" duration-ms="513" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [correct error message is Epic sadface: Password is required] but found [Epic sadface: Password is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [correct error message is Epic sadface: Password is required] but found [Epic sadface: Password is required]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at tests.ErrorValidationTest.testInvalidLoginLandingPage(ErrorValidationTest.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginLandingPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ErrorValidationTest@2f19f2aa]" started-at="2024-12-18T11:33:59 EET" name="tearDown" description="Cleans up resources by quitting the browser instance and removing the driver after test execution." finished-at="2024-12-18T11:33:59 EET" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ErrorValidationTest -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2024-12-18T11:33:52 EET" name="MainTestSuite" finished-at="2024-12-18T11:34:01 EET" duration-ms="9177">
      <class name="tests.CartPageTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.CartPageTest@6bb7cce7]" started-at="2024-12-18T11:33:59 EET" name="beforeTest" description="Initializes CartPageProcedures before each test method for cart-related operations." finished-at="2024-12-18T11:33:59 EET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="clickTest()[pri:0, instance:tests.CartPageTest@6bb7cce7]" started-at="2024-12-18T11:33:59 EET" name="clickTest" description="Navigate to checkout page by clicking the checkout button" finished-at="2024-12-18T11:33:59 EET" duration-ms="410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTest -->
      </class> <!-- tests.CartPageTest -->
      <class name="tests.CheckoutPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CheckoutPageTest@41c62850]" started-at="2024-12-18T11:33:59 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2024-12-18T11:33:59 EET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="goToCheckoutOverView(data.CheckoutPageData)[pri:0, instance:tests.CheckoutPageTest@41c62850]" started-at="2024-12-18T11:33:59 EET" name="goToCheckoutOverView" description="Verify user can enter their shipping address (first name, last name, and postal code) and proceed to the checkout overview page" data-provider="getCheckoutPageData" finished-at="2024-12-18T11:34:00 EET" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.CheckoutPageData@3b059835]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToCheckoutOverView -->
      </class> <!-- tests.CheckoutPageTest -->
      <class name="tests.LandingPageTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:tests.LandingPageTest@5d52e3ef]" started-at="2024-12-18T11:33:52 EET" name="initialize" description="Sets up the browser instance and prepares the driver for the test execution." finished-at="2024-12-18T11:33:56 EET" duration-ms="3705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LandingPageTest@5d52e3ef]" started-at="2024-12-18T11:33:56 EET" name="setUp" description="Sets up the test environment by initializing configurations, launching the browser, and navigating to the base URL." finished-at="2024-12-18T11:33:57 EET" duration-ms="845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginLandingPage(data.LoginLandingPageData)[pri:0, instance:tests.LandingPageTest@5d52e3ef]" started-at="2024-12-18T11:33:57 EET" name="testLoginLandingPage" description="Verify user can log in to the landing page using a valid username and password, and successfully submit the login form." data-provider="getLandingPageData" finished-at="2024-12-18T11:33:58 EET" duration-ms="838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[data.LoginLandingPageData@1e5371c4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginLandingPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LandingPageTest@5d52e3ef]" started-at="2024-12-18T11:34:00 EET" name="tearDown" description="Cleans up resources by quitting the browser instance and removing the driver after test execution." finished-at="2024-12-18T11:34:01 EET" duration-ms="1360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LandingPageTest -->
      <class name="tests.CompletePageTest">
        <test-method signature="verifiedConfirmationText()[pri:0, instance:tests.CompletePageTest@328572f0]" started-at="2024-12-18T11:34:00 EET" name="verifiedConfirmationText" description="Verify the confirmation message displayed after completing the checkout process correctly indicates that the product has been successfully ordered" finished-at="2024-12-18T11:34:00 EET" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifiedConfirmationText -->
      </class> <!-- tests.CompletePageTest -->
      <class name="tests.CheckoutOverviewTest">
        <test-method signature="gotToCompletePage()[pri:0, instance:tests.CheckoutOverviewTest@6b530eb9]" started-at="2024-12-18T11:34:00 EET" name="gotToCompletePage" description="Verify user can successfully navigate to the completion page after entering all necessary information during checkout and confirm the selected product is correctly displayed." finished-at="2024-12-18T11:34:00 EET" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotToCompletePage -->
      </class> <!-- tests.CheckoutOverviewTest -->
      <class name="tests.ProductCatalogueTest">
        <test-method is-config="true" signature="intialize()[pri:0, instance:tests.ProductCatalogueTest@15b986cd]" started-at="2024-12-18T11:33:58 EET" name="intialize" description="Initializes the ProductCatalogueProcedures instance before each test method." finished-at="2024-12-18T11:33:58 EET" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method signature="testAddItemsLessThanTenDollarsToCart()[pri:0, instance:tests.ProductCatalogueTest@15b986cd]" started-at="2024-12-18T11:33:58 EET" name="testAddItemsLessThanTenDollarsToCart" description="Verify user can successfully add items priced under ten dollars to the shopping cart." finished-at="2024-12-18T11:33:59 EET" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddItemsLessThanTenDollarsToCart -->
      </class> <!-- tests.ProductCatalogueTest -->
    </test> <!-- MainTestSuite -->
  </suite> <!-- Suite -->
</testng-results>
